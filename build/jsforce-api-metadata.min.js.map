{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jsforce-api-metadata.min.js","lib/api/metadata.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/ieee754/index.js","node_modules/process/browser.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","modules","api","Metadata","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","process","Buffer","convertToSaveResult","result","saveResult","_","clone","success","convertToUpsertResult","upsertResult","created","convertToMetadataInfo","rec","metadataInfo","$","inherits","events","stream","Promise","SOAP","conn","_conn","prototype","pollInterval","pollTimeout","_invoke","method","message","callback","soapEndpoint","xmlns","endpointUrl","instanceUrl","version","invoke","then","res","thenCall","createAsync","type","metadata","Number","convert","md","isArray","map","AsyncResultLocator","createSync","create","results","readSync","read","fullNames","records","updateAsync","updateMetadata","umd","updateSync","update","upsertSync","upsert","deleteAsync","isString","fullName","del","deleteSync","rename","oldFullName","newFullName","checkStatus","ids","asyncProcessId","describe","asOfVersion","metadataObjects","mo","childXmlNames","inFolder","metaFile","partialSaveAllowed","testRequired","describeValueType","convertValueTypeFieldTypes","valueTypeField","fields","isForeignKey","isNameField","valueRequired","minOccurs","picklistValues","picklistValue","active","defaultValue","label","apiCreatable","apiDeletable","apiReadable","apiUpdatable","isObject","parentField","valueTypeFields","list","queries","retrieve","request","RetrieveResultLocator","checkRetrieveStatus","id","deploy","zipInput","options","isFunction","deferred","defer","pipe","bufs","on","d","push","resolve","concat","toString","String","promise","zipContentB64","ZipFile","DeployOptions","DeployResultLocator","checkDeployStatus","includeDetails","isBoolean","done","checkOnly","runTestsEnabled","ignoreWarnings","rollbackOnError","numberComponentErrors","numberComponentsDeployed","numberComponentsTotal","numberTestErrors","numberTestsCompleted","numberTestsTotal","details","Array","forEach","detail","fails","componentFailures","componentSuccesses","component","undefined","changed","deleted","columnNumber","lineNumber","meta","_meta","_results","_isArray","EventEmitter","onResolve","onReject","convertType","nextTick","err","check","_ids","poll","interval","timeout","startTime","Date","getTime","now","errMsg","emit","resultArr","len","setTimeout","complete","reject","super_","resultStream","Readable","reading","_read","zipFile","_process","buffer","2","getLens","b64","validLen","indexOf","placeHoldersLen","byteLength","lens","_byteLength","toByteArray","tmp","arr","Arr","curByte","revLookup","charCodeAt","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","3","typedArraySupport","__proto__","foo","createBuffer","K_MAX_LENGTH","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","ArrayBuffer","isView","numberIsNaN","data","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","Math","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","base64clean","str","split","trim","replace","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","constructor","name","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","console","error","Object","defineProperty","get","Symbol","species","configurable","enumerable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","arguments","toLocaleString","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","base64-js","4","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","isNaN","floor","log","LN2","5","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","noop","args","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"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","file":"jsforce-api-metadata.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g=(g.jsforce||(g.jsforce = {}));g=(g.modules||(g.modules = {}));g=(g.api||(g.api = {}));g.Metadata = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (process,Buffer){\n/*global process, Buffer */\n/**\n * @file Manages Salesforce Metadata API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = window.jsforce.require('inherits'),\n    events  = window.jsforce.require('events'),\n    stream  = window.jsforce.require('readable-stream'),\n    _       = window.jsforce.require('lodash/core'),\n    jsforce = window.jsforce.require('./core'),\n    Promise = window.jsforce.require('./promise'),\n    SOAP    = window.jsforce.require('./soap');\n\n/*--------------------------------------------*/\n/**\n * Class for Salesforce Metadata API\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Metadata = module.exports = function(conn) {\n  this._conn = conn;\n};\n\n\n/**\n * Polling interval in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollInterval = 1000;\n\n/**\n * Polling timeout in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollTimeout = 10000;\n\n\n/**\n * Call Metadata API SOAP endpoint\n *\n * @private\n */\nMetadata.prototype._invoke = function(method, message, callback) {\n  var soapEndpoint = new SOAP(this._conn, {\n    xmlns: \"http://soap.sforce.com/2006/04/metadata\",\n    endpointUrl: this._conn.instanceUrl + \"/services/Soap/m/\" + this._conn.version\n  });\n  return soapEndpoint.invoke(method, message).then(function(res) {\n    return res.result;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Metadata~MetadataInfo\n * @prop {String} fullName - The name of the component\n */\n\n/**\n * Asynchronously adds one or more new metadata components to the organization.\n *\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.createAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"create\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~SaveResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n */\n\n/**\n * @private\n */\nfunction convertToSaveResult(result) {\n  var saveResult = _.clone(result);\n  saveResult.success = saveResult.success === 'true';\n  return saveResult;\n}\n\n/**\n * @typedef {Object} Metadata~UpsertResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n * @prop {Boolean} created - True if metadata is newly created\n */\n\n/**\n * @private\n */\nfunction convertToUpsertResult(result) {\n  var upsertResult = convertToSaveResult(result);\n  upsertResult.created = upsertResult.created === 'true';\n  return upsertResult;\n}\n\n/**\n * Synonym of Metadata#create().\n *\n * @method Metadata#createSync\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously adds one or more new metadata components to the organization.\n *\n * @method Metadata#create\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.createSync =\nMetadata.prototype.create = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"createMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * @private\n */\nfunction convertToMetadataInfo(rec) {\n  var metadataInfo = _.clone(rec);\n  delete metadataInfo.$;\n  return metadataInfo;\n}\n\n/**\n * Synonym of Metadata#read()\n *\n * @method Metadata#readSync\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\n/**\n * Synchronously read specified metadata components in the organization.\n *\n * @method Metadata#read\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\nMetadata.prototype.readSync =\nMetadata.prototype.read = function(type, fullNames, callback) {\n  return this._invoke(\"readMetadata\", { type: type, fullNames: fullNames }).then(function(res) {\n    return _.isArray(res.records) ? _.map(res.records, convertToMetadataInfo) : convertToMetadataInfo(res.records);\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~UpdateMetadataInfo\n * @prop {String} currentName - The API name of the component or field before the update\n * @prop {Metadata~MetadataInfo} metadata - Full specification of the component or field you wish to update\n */\n\n/**\n * Asynchronously updates one or more metadata components in the organization.\n *\n * @param {String} type - The type of metadata to update\n * @param {Metadata~UpdateMetadataInfo|Array.<Metadata~UpdateMetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.updateAsync = function(type, updateMetadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(umd) {\n    umd.metadata[\"@xsi:type\"] = type;\n    return umd;\n  };\n  var isArray = _.isArray(updateMetadata);\n  updateMetadata = isArray ? _.map(updateMetadata, convert) : convert(updateMetadata);\n  var res = this._invoke(\"update\", { updateMetadata: updateMetadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#update().\n *\n * @method Metadata#updateSync\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously updates one or more metadata components in the organization.\n *\n * @method Metadata#update\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.updateSync =\nMetadata.prototype.update = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"updateMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#upsert().\n *\n * @method Metadata#upsertSync\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\n/**\n * Upserts one or more components in your organization's data.\n *\n * @method Metadata#upsert\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\nMetadata.prototype.upsertSync =\nMetadata.prototype.upsert = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"upsertMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToUpsertResult) : convertToUpsertResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Asynchronously deletes specified metadata components in the organization.\n *\n * @param {String} type - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.deleteAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    if (_.isString(md)) {\n      md = { fullName : md };\n    }\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"delete\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#delete().\n *\n * @deprecated\n * @method Metadata#del\n * @param {String} [type] - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\n/**\n * Synonym of Metadata#delete().\n *\n * @method Metadata#deleteSync\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n\n/**\n * Synchronously deletes specified metadata components in the organization.\n *\n * @method Metadata#delete\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.del =\nMetadata.prototype.deleteSync =\nMetadata.prototype[\"delete\"] = function(type, fullNames, callback) {\n  return this._invoke(\"deleteMetadata\", { type: type, fullNames: fullNames }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Rename fullname of a metadata component in the organization\n *\n * @param {String} type - The type of metadata to delete\n * @param {String} oldFullName - The original fullName of metadata\n * @param {String} newFullName - The new fullName of metadata\n * @param {Callback.<Metadata~SaveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult>}\n */\nMetadata.prototype.rename = function(type, oldFullName, newFullName, callback) {\n  return this._invoke(\"renameMetadata\", { type: type, oldFullName: oldFullName, newFullName: newFullName }).then(function(result) {\n    return convertToSaveResult(result);\n  }).thenCall(callback);\n};\n\n/**\n * Checks the status of asynchronous metadata calls\n *\n * @param {String|Array.<String>} ids - The asynchronous process ID(s)\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.checkStatus = function(ids, callback) {\n  var isArray = _.isArray(ids);\n  var res = this._invoke(\"checkStatus\", { asyncProcessId: ids });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~DescribeMetadataResult\n * @prop {Array.<Object>} metadataObjects - One or more metadata components and their attributes\n * @prop {Array.<String>} metadataObjects.childXmlNames - List of child sub-components for this component\n * @prop {String} metadataObjects.directoryName - The name of the directory in the .zip file that contains this component\n * @prop {Boolean} metadataObjects.inFolder - Indicates whether the component is in a folder or not\n * @prop {Boolean} metadataObjects.metaFile - Indicates whether the component requires an accompanying metadata file\n * @prop {String} metadataObjects.suffix - The file suffix for this component\n * @prop {String} metadataObjects.xmlName - The name of the root element in the metadata file for this component\n * @prop {String} organizationNamespace - The namespace of the organization\n * @prop {Boolean} partialSaveAllowed - Indicates whether rollbackOnError is allowed or not\n * @prop {Boolean} testRequired - Indicates whether tests are required or not\n */\n\n/**\n * Retrieves the metadata which describes your organization, including Apex classes and triggers,\n * custom objects, custom fields on standard objects, tab sets that define an app,\n * and many other components.\n *\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Metadata~DescribeMetadataResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DescribeMetadataResult>}\n */\nMetadata.prototype.describe = function(version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  return this._invoke(\"describeMetadata\", { asOfVersion: version }).then(function(res) {\n    res.metadataObjects = _.isArray(res.metadataObjects) ? res.metadataObjects : [ res.metadataObjects ];\n    res.metadataObjects = _.map(res.metadataObjects, function(mo) {\n      if (mo.childXmlNames) {\n        mo.childXmlNames = _.isArray(mo.childXmlNames) ? mo.childXmlNames: [ mo.childXmlNames ];\n      }\n      mo.inFolder = mo.inFolder === 'true';\n      mo.metaFile = mo.metaFile === 'true';\n      return mo;\n    });\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\n    res.testRequired = res.testRequired === 'true';\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~DescribeValueTypeResult\n * @prop {Boolean} apiCreatable - Indicates whether this value type can be created through the createMetadata() call (true) or not (false)\n * @prop {Boolean} apiDeletable - Indicates whether this value type can be created through the deleteMetadata() call (true) or not (false)\n * @prop {Boolean} apiReadable - Indicates whether this value type can be created through the readMetadata() call (true) or not (false)\n * @prop {Boolean} apiUpdatable - Indicates whether this value type can be created through the updateMetadata() call (true) or not (false)\n * @prop {Object} parentField - Information about the parent of this value type. Parent field information is useful for metadata types that are specified with the parent in their name, such as custom fields, email templates, workflow rules, and reports. For example, the full name of a custom field includes the sObject that contains it (for example, Account.field1__c). Similarly, the full name of an email template includes the folder where the template is stored (for example, MyFolder/EmailTemplate1). If the value type has no parent, this field is null\n * @prop {Array.<Object>} valueTypeFields - One or more metadata components and their attributes\n * @prop {Array.<Object>} valueTypeFields.fields - The ValueTypeField object for the next field, if any\n * @prop {Boolean} valueTypeFields.fields.isForeignKey\n * @prop {Boolean} valueTypeFields.fields.isNameField\n * @prop {Number} valueTypeFields.fields.minOccurs\n * @prop {String} valueTypeFields.fields.name\n * @prop {String} valueTypeFields.fields.soapType\n * @prop {Boolean} valueTypeFields.fields.valueRequired\n * @prop {String} valueTypeFields.foreignKeyDomain - If isForeignKey is True, foreignKeyDomain is the type of object, such as Account or Opportunity\n * @prop {Boolean} valueTypeFields.isForeignKey -  True if the field is a foreign key. That means this field is the primary key in a different database table\n * @prop {Boolean} valueTypeFields.isNameField -  True if this value type field is a fullName field, otherwise False\n * @prop {Number} valueTypeFields.minOccurs - 1 if this field is required, 0 otherwise\n * @prop {String} valueTypeFields.name - The name of this value type field. The name is null for parent fields\n * @prop {Array.<Object>} valueTypeFields.picklistValues - The individual picklist values if the field is a picklist\n * @prop {Boolean} valueTypeFields.picklistValues.active\n * @prop {Boolean} valueTypeFields.picklistValues.defaultValue\n * @prop {String} valueTypeFields.picklistValues.label\n * @prop {String} valueTypeFields.picklistValues.value\n * @prop {String} valueTypeFields.soapType - The data type of the field, such as boolean or double\n * @prop {Boolean} valueTypeFields.valueRequired - Required. Indicates whether this value type field must have a value (true) or can be null (false)\n */\n\n/**\n * Contains information about a value type that is useful for developers working with declarative metadata.\n * The describeValueType() call returns a DescribeValueTypeResult object.\n * Each DescribeValueTypeResult object has the following properties.\n *\n * @param {String} [type] - The name of the metadata type for which you want metadata; for example, ApexClass. Include the namespace.\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Metadata~DescribeValueTypeResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DescribeValueTypeResult>}\n */\nMetadata.prototype.describeValueType = function(type, version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n\n  return this._invoke(\"describeValueType\", { type: type }).then(function(res) {\n\n    function convertValueTypeFieldTypes(valueTypeField) {\n      if(!valueTypeField) {\n        return null;\n      }\n      valueTypeField.fields = valueTypeField.fields || [];\n      valueTypeField.fields = _.isArray(valueTypeField.fields) ? valueTypeField.fields : [ valueTypeField.fields ];\n      valueTypeField.fields = _.map(valueTypeField.fields, convertValueTypeFieldTypes);\n      valueTypeField.isForeignKey = valueTypeField.isForeignKey === 'true';\n      valueTypeField.isNameField = valueTypeField.isNameField === 'true';\n      valueTypeField.valueRequired = valueTypeField.valueRequired === 'true';\n      valueTypeField.minOccurs = Number(valueTypeField.minOccurs);\n      valueTypeField.picklistValues = valueTypeField.picklistValues || [];\n      valueTypeField.picklistValues = _.isArray(valueTypeField.picklistValues) ? valueTypeField.picklistValues : [ valueTypeField.picklistValues ];\n      valueTypeField.picklistValues = _.map(valueTypeField.picklistValues, function(picklistValue) {\n        picklistValue.active = picklistValue.active === 'true';\n        picklistValue.defaultValue = picklistValue.defaultValue === 'true';\n        picklistValue.label = picklistValue.label && picklistValue.label.$ && picklistValue.label.$['xsi:nil'] ? null : picklistValue.label;\n        return picklistValue;\n      })\n      return valueTypeField;\n    }\n\n    res.apiCreatable = res.apiCreatable === 'true';\n    res.apiDeletable = res.apiDeletable === 'true';\n    res.apiReadable = res.apiReadable === 'true';\n    res.apiUpdatable = res.apiUpdatable === 'true';\n    res.apiUpdatable = res.apiUpdatable === 'true';\n    if(_.isObject(res.parentField)) {\n      convertValueTypeFieldTypes(res.parentField);\n    }\n    res.valueTypeFields = res.valueTypeFields || [];\n    res.valueTypeFields = _.isArray(res.valueTypeFields) ? res.valueTypeFields : [ res.valueTypeFields ];\n    res.valueTypeFields = _.map(res.valueTypeFields, convertValueTypeFieldTypes);\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\n    res.testRequired = res.testRequired === 'true';\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~ListMetadataQuery\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} [folder] - The folder associated with the component.\n */\n\n/**\n * @typedef {Object} Metadata~FileProperties\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} createdById - ID of the user who created the file\n * @prop {String} createdByName - Name of the user who created the file\n * @prop {String} createdDate - Date and time when the file was created\n * @prop {String} fileName - Name of the file\n * @prop {String} fullName - The file developer name used as a unique identifier for API access\n * @prop {String} id - ID of the file\n * @prop {String} lastModifiedById - ID of the user who last modified the file\n * @prop {String} lastModifiedByName - Name of the user who last modified the file\n * @prop {String} lastModifiedDate - Date and time that the file was last modified\n * @prop {String} [manageableState] - Indicates the manageable state of the specified component if it is contained in a package\n * @prop {String} [namespacePrefix] - The namespace prefix of the component\n */\n\n/**\n * Retrieves property information about metadata components in your organization\n *\n * @param {Metadata~ListMetadataQuery|Array.<Metadata~ListMetadataQuery>} queries - The criteria object(s) specifing metadata to list\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Array.<Metadata~FileProperties>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~FileProperties>>}\n */\nMetadata.prototype.list = function(queries, version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  if (!_.isArray(queries)) {\n    queries = [ queries ];\n  }\n  return this._invoke(\"listMetadata\", { queries: queries, asOfVersion: version }, callback);\n};\n\n/**\n * @typedef {Object} Metadata~RetrieveRequest\n */\n\n/**\n * Retrieves XML file representations of components in an organization\n *\n * @param {Metadata~RetrieveRequest} request - Options for determining which packages or files are retrieved\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~RetrieveResultLocator}\n */\nMetadata.prototype.retrieve = function(request, callback) {\n  var res = this._invoke(\"retrieve\", { request: request });\n  return new RetrieveResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call retrieve() and returns the zip file contents\n *\n * @param {String} id - Async process id returned from previous retrieve request\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nMetadata.prototype.checkRetrieveStatus = function(id, callback) {\n  return this._invoke(\"checkRetrieveStatus\", { asyncProcessId: id }, callback);\n};\n\n/**\n * Deploy components into an organization using zipped file representations\n *\n * @param {stream.Stream|Buffer|String} zipInput - Zipped file input source in readable stream, binary buffer or Base64-encoded string\n * @param {Object} [options] - Options used in deployment\n * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\n * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\n * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\n * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\n * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\n * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\n * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\n * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\n * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\n * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~DeployResultLocator}\n */\nMetadata.prototype.deploy = function(zipInput, options, callback) {\n  if (!options || _.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var deferred = Promise.defer();\n  if (_.isObject(zipInput) && _.isFunction(zipInput.pipe)) {\n    var bufs = [];\n    zipInput.on('data', function(d) {\n      bufs.push(d);\n    });\n    zipInput.on('end', function() {\n      deferred.resolve(Buffer.concat(bufs).toString('base64'));\n    });\n    // zipInput.resume();\n  } else if (zipInput instanceof Buffer) {\n    deferred.resolve(zipInput.toString('base64'));\n  } else if (zipInput instanceof String || typeof zipInput === 'string') {\n    deferred.resolve(zipInput);\n  } else {\n    throw \"Unexpected zipInput type\";\n  }\n\n  var self = this;\n  var res = deferred.promise.then(function(zipContentB64) {\n    return self._invoke(\"deploy\", {\n      ZipFile: zipContentB64,\n      DeployOptions: options\n    }, callback);\n  });\n  return new DeployResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call deploy()\n *\n * @param {String} id - Async process id returned from previous deploy request\n * @param {Boolean} [includeDetails] - Sets the DeployResult object to include details information (default: false)\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nMetadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {\n  if (_.isObject(includeDetails) || _.isBoolean(includeDetails)) {\n    includeDetails = !!includeDetails;\n  } else {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  return this._invoke(\"checkDeployStatus\", {\n    asyncProcessId: id,\n    includeDetails : includeDetails\n  }).then(function(res) {\n    res.done = res.done === 'true';\n    res.success = res.success === 'true';\n    res.checkOnly = res.checkOnly === 'true';\n    res.runTestsEnabled = res.runTestsEnabled === 'true';\n    if (res.ignoreWarnings) {\n      res.ignoreWarnings = res.ignoreWarnings === 'true';\n    }\n    if (res.rollbackOnError) {\n      res.rollbackOnError = res.rollbackOnError === 'true';\n    }\n    res.numberComponentErrors = Number(res.numberComponentErrors);\n    res.numberComponentsDeployed = Number(res.numberComponentsDeployed);\n    res.numberComponentsTotal = Number(res.numberComponentsTotal);\n    res.numberTestErrors = Number(res.numberTestErrors);\n    res.numberTestsCompleted = Number(res.numberTestsCompleted);\n    res.numberTestsTotal = Number(res.numberTestsTotal);\n\n    if (res.details) {\n      res.details = (Array.isArray(res.details) ? res.details : [res.details]);\n      res.details.forEach(function(detail) {\n        var fails = Array.isArray(detail.componentFailures)\n          ? detail.componentFailures\n          : [detail.componentFailures];\n        var success = Array.isArray(detail.componentSuccesses)\n          ? detail.componentSuccesses\n          : [detail.componentSuccesses];\n\n        fails.concat(success).forEach(\n          function(component) {\n            if (component === undefined) {\n              return\n            }\n            component.changed = component.changed === 'true'\n            component.created = component.created === 'true'\n            component.deleted = component.deleted === 'true'\n            component.success = component.success === 'true'\n            if (component.columnNumber) {\n              component.columnNumber = Number(component.columnNumber)\n            }\n            if (component.lineNumber) {\n              component.lineNumber = Number(component.lineNumber)\n            }\n          }\n        )\n      })\n    }\n    return res;\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n\n/**\n * @typedef {Object} Metadata~AsyncResult\n * @prop {Boolean} done - Indicates whether the call has completed or not\n * @prop {String} id - ID of the component being created, updated, deleted, deployed, or retrieved\n * @prop {String} state - The state four possible values: Queued, InProgress, Completed, and Error.\n * @prop {String} [statusCode] - If an error occurred during the create(), update(), or delete() call, a status code is returned\n * @prop {String} [message] - Message corresponding to the statusCode field returned\n */\n\n/**\n * The locator class for Metadata API asynchronous call result\n *\n * @protected\n * @class Metadata~AsyncResultLocator\n * @extends events.EventEmitter\n * @implements Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} results - Promise object for async result info\n * @param {Boolean} [isArray] - Indicates whether the async request is given in array or single object\n */\nvar AsyncResultLocator = function(meta, results, isArray) {\n  this._meta = meta;\n  this._results = results;\n  this._isArray = isArray;\n};\n\ninherits(AsyncResultLocator, events.EventEmitter);\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for batch result\n *\n * @method Metadata~AsyncResultLocator#then\n */\nAsyncResultLocator.prototype.then = function(onResolve, onReject) {\n  var self = this;\n  return this._results.then(function(results) {\n    var convertType = function(res) {\n      if (res.$ && res.$[\"xsi:nil\"] === 'true') {\n        return null;\n      }\n      res.done = res.done === 'true';\n      return res;\n    };\n    results = _.isArray(results) ? _.map(results, convertType) : convertType(results);\n    if (self._isArray && !_.isArray(results)) {\n      results = [ results ];\n    }\n    return onResolve(results);\n  }, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Metadata~AsyncResultLocator#thenCall\n */\nAsyncResultLocator.prototype.thenCall = function(callback) {\n  return _.isFunction(callback) ? this.then(function(res) {\n    process.nextTick(function() {\n      callback(null, res);\n    });\n  }, function(err) {\n    process.nextTick(function() {\n      callback(err);\n    });\n  }) : this;\n};\n\n/**\n * Check the status of async request\n *\n * @method Metadata~AsyncResultLocator#check\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.check = function(callback) {\n  var self = this;\n  var meta = this._meta;\n  return this.then(function(results) {\n    var ids = _.isArray(results) ? _.map(results, function(res){ return res.id; }) : results.id;\n    self._ids = ids;\n    return meta.checkStatus(ids);\n  }).thenCall(callback);\n};\n\n/**\n * Polling until async call status becomes complete or error\n *\n * @method Metadata~AsyncResultLocator#poll\n * @param {Number} interval - Polling interval in milliseconds\n * @param {Number} timeout - Polling timeout in milliseconds\n */\nAsyncResultLocator.prototype.poll = function(interval, timeout) {\n  var self = this;\n  var startTime = new Date().getTime();\n  var poll = function() {\n    var now = new Date().getTime();\n    if (startTime + timeout < now) {\n      var errMsg = \"Polling time out.\";\n      if (self._ids) {\n        errMsg += \" Process Id = \" + self._ids;\n      }\n      self.emit('error', new Error(errMsg));\n      return;\n    }\n    self.check().then(function(results) {\n      var done = true;\n      var resultArr = _.isArray(results) ? results : [ results ];\n      for (var i=0, len=resultArr.length; i<len; i++) {\n        var result = resultArr[i];\n        if (result && !result.done) {\n          self.emit('progress', result);\n          done = false;\n        }\n      }\n      if (done) {\n        self.emit('complete', results);\n      } else {\n        setTimeout(poll, interval);\n      }\n    }, function(err) {\n      self.emit('error', err);\n    });\n  };\n  setTimeout(poll, interval);\n};\n\n/**\n * Check and wait until the async requests become in completed status\n *\n * @method Metadata~AsyncResultLocator#complete\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.complete = function(callback) {\n  var deferred = Promise.defer();\n  this.on('complete', function(results) {\n    deferred.resolve(results);\n  });\n  this.on('error', function(err) {\n    deferred.reject(err);\n  });\n  var meta = this._meta;\n  this.poll(meta.pollInterval, meta.pollTimeout);\n  return deferred.promise.thenCall(callback);\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track retreive() Metadata API call result\n *\n * @protected\n * @class Metadata~RetrieveResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of retrieve call()\n */\nvar RetrieveResultLocator = function(meta, result) {\n  RetrieveResultLocator.super_.call(this, meta, result);\n};\n\ninherits(RetrieveResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~RetrieveResult\n * @prop {Array.<Metadata~FileProperties>} fileProperties - Contains information about the properties of each component in the .zip file, and the manifest file package.xml\n * @prop {String} id - ID of the component being retrieved\n * @prop {Array.<Object>} messages - Contains information about the success or failure of the retrieve() call\n * @prop {String} zipFile - The zip file returned by the retrieve request. Base 64-encoded binary data\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @memthod Metadata~RetrieveResultLocator#complete\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nRetrieveResultLocator.prototype.complete = function(callback) {\n  var meta = this._meta;\n  return RetrieveResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkRetrieveStatus(result.id);\n  }).thenCall(callback);\n};\n\n/**\n * Change the retrieved result to Node.js readable stream\n *\n * @method Metadata~RetrieveResultLocator#stream\n * @returns {stream.Readable}\n */\nRetrieveResultLocator.prototype.stream = function() {\n  var self = this;\n  var resultStream = new stream.Readable();\n  var reading = false;\n  resultStream._read = function() {\n    if (reading) { return; }\n    reading = true;\n    self.complete(function(err, result) {\n      if (err) {\n        resultStream.emit('error', err);\n      } else {\n        resultStream.push(new Buffer(result.zipFile, 'base64'));\n        resultStream.push(null);\n      }\n    });\n  };\n  return resultStream;\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track deploy() Metadata API call result\n *\n * @protected\n * @class Metadata~DeployResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call\n */\nvar DeployResultLocator = function(meta, result) {\n  DeployResultLocator.super_.call(this, meta, result);\n};\n\ninherits(DeployResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~DeployResult\n * @prop {String} id - ID of the component being deployed\n * @prop {Boolean} checkOnly - Indicates whether this deployment is being used to check the validity of the deployed files without making any changes in the organization or not\n * @prop {String} completedDate - Timestamp for when the deployment process ended\n * @prop {String} createdDate - Timestamp for when the deploy() call was received\n * @prop {Array.<Object>} [details] - Provides the details of a deployment that is in-progress or ended, if includeDetails is set to true in checkDeployStatus() call\n * @prop {Boolean} done - Indicates whether the server finished processing the deploy() call for the specified id\n * @prop {String} [errorMessage] - Message corresponding to the values in the errorStatusCode field\n * @prop {String} [errorStatusCode] - If an error occurred during the deploy() call, a status code is returned, and the message corresponding to the status code is returned in the errorMessagefield\n * @prop {Boolean} [ignoreWarnings] - Specifies whether a deployment should continue even if the deployment generates warnings\n * @prop {String} lastModifiedDate - Timestamp of the last update for the deployment process\n * @prop {Number} numberComponentErrors - The number of components that generated errors during this deployment\n * @prop {Number} numberComponentsDeployed - The number of components deployed in the deployment process\n * @prop {Number} numberComponentsTotal - The total number of components in the deployment\n * @prop {Number} numberTestErrors - The number of Apex tests that have generated errors during this deployment\n * @prop {Number} numberTestsCompleted - The number of completedApex tests for this deployment\n * @prop {Number} numberTestsTotal - The total number of Apex tests for this deployment\n * @prop {Boolean} [rollbackOnError] - Indicates whether any failure causes a complete rollback or not. Default is true.\n * @prop {String} startDate - Timestamp for when the deployment process began\n * @prop {String} status - Indicates the current state of the deployment\n * @prop {Boolean} success - Indicates whether the deployment was successful or not\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @method Metadata~DeployResultLocator#complete\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nDeployResultLocator.prototype.complete = function(includeDetails, callback) {\n  if (_.isFunction(includeDetails)) {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  var meta = this._meta;\n  return DeployResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkDeployStatus(result.id, includeDetails);\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\njsforce.on('connection:new', function(conn) {\n  conn.metadata = new Metadata(conn);\n});\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"_process\":5,\"buffer\":3}],2:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":2,\"ieee754\":4}],4:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],5:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}]},{},[1])(1)\n});\n\n","/*global process, Buffer */\n/**\n * @file Manages Salesforce Metadata API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = window.jsforce.require('inherits'),\n    events  = window.jsforce.require('events'),\n    stream  = window.jsforce.require('readable-stream'),\n    _       = window.jsforce.require('lodash/core'),\n    jsforce = window.jsforce.require('./core'),\n    Promise = window.jsforce.require('./promise'),\n    SOAP    = window.jsforce.require('./soap');\n\n/*--------------------------------------------*/\n/**\n * Class for Salesforce Metadata API\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Metadata = module.exports = function(conn) {\n  this._conn = conn;\n};\n\n\n/**\n * Polling interval in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollInterval = 1000;\n\n/**\n * Polling timeout in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollTimeout = 10000;\n\n\n/**\n * Call Metadata API SOAP endpoint\n *\n * @private\n */\nMetadata.prototype._invoke = function(method, message, callback) {\n  var soapEndpoint = new SOAP(this._conn, {\n    xmlns: \"http://soap.sforce.com/2006/04/metadata\",\n    endpointUrl: this._conn.instanceUrl + \"/services/Soap/m/\" + this._conn.version\n  });\n  return soapEndpoint.invoke(method, message).then(function(res) {\n    return res.result;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Metadata~MetadataInfo\n * @prop {String} fullName - The name of the component\n */\n\n/**\n * Asynchronously adds one or more new metadata components to the organization.\n *\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.createAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"create\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~SaveResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n */\n\n/**\n * @private\n */\nfunction convertToSaveResult(result) {\n  var saveResult = _.clone(result);\n  saveResult.success = saveResult.success === 'true';\n  return saveResult;\n}\n\n/**\n * @typedef {Object} Metadata~UpsertResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n * @prop {Boolean} created - True if metadata is newly created\n */\n\n/**\n * @private\n */\nfunction convertToUpsertResult(result) {\n  var upsertResult = convertToSaveResult(result);\n  upsertResult.created = upsertResult.created === 'true';\n  return upsertResult;\n}\n\n/**\n * Synonym of Metadata#create().\n *\n * @method Metadata#createSync\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously adds one or more new metadata components to the organization.\n *\n * @method Metadata#create\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.createSync =\nMetadata.prototype.create = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"createMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * @private\n */\nfunction convertToMetadataInfo(rec) {\n  var metadataInfo = _.clone(rec);\n  delete metadataInfo.$;\n  return metadataInfo;\n}\n\n/**\n * Synonym of Metadata#read()\n *\n * @method Metadata#readSync\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\n/**\n * Synchronously read specified metadata components in the organization.\n *\n * @method Metadata#read\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\nMetadata.prototype.readSync =\nMetadata.prototype.read = function(type, fullNames, callback) {\n  return this._invoke(\"readMetadata\", { type: type, fullNames: fullNames }).then(function(res) {\n    return _.isArray(res.records) ? _.map(res.records, convertToMetadataInfo) : convertToMetadataInfo(res.records);\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~UpdateMetadataInfo\n * @prop {String} currentName - The API name of the component or field before the update\n * @prop {Metadata~MetadataInfo} metadata - Full specification of the component or field you wish to update\n */\n\n/**\n * Asynchronously updates one or more metadata components in the organization.\n *\n * @param {String} type - The type of metadata to update\n * @param {Metadata~UpdateMetadataInfo|Array.<Metadata~UpdateMetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.updateAsync = function(type, updateMetadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(umd) {\n    umd.metadata[\"@xsi:type\"] = type;\n    return umd;\n  };\n  var isArray = _.isArray(updateMetadata);\n  updateMetadata = isArray ? _.map(updateMetadata, convert) : convert(updateMetadata);\n  var res = this._invoke(\"update\", { updateMetadata: updateMetadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#update().\n *\n * @method Metadata#updateSync\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously updates one or more metadata components in the organization.\n *\n * @method Metadata#update\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.updateSync =\nMetadata.prototype.update = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"updateMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#upsert().\n *\n * @method Metadata#upsertSync\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\n/**\n * Upserts one or more components in your organization's data.\n *\n * @method Metadata#upsert\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\nMetadata.prototype.upsertSync =\nMetadata.prototype.upsert = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"upsertMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToUpsertResult) : convertToUpsertResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Asynchronously deletes specified metadata components in the organization.\n *\n * @param {String} type - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.deleteAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    if (_.isString(md)) {\n      md = { fullName : md };\n    }\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"delete\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#delete().\n *\n * @deprecated\n * @method Metadata#del\n * @param {String} [type] - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\n/**\n * Synonym of Metadata#delete().\n *\n * @method Metadata#deleteSync\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n\n/**\n * Synchronously deletes specified metadata components in the organization.\n *\n * @method Metadata#delete\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.del =\nMetadata.prototype.deleteSync =\nMetadata.prototype[\"delete\"] = function(type, fullNames, callback) {\n  return this._invoke(\"deleteMetadata\", { type: type, fullNames: fullNames }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Rename fullname of a metadata component in the organization\n *\n * @param {String} type - The type of metadata to delete\n * @param {String} oldFullName - The original fullName of metadata\n * @param {String} newFullName - The new fullName of metadata\n * @param {Callback.<Metadata~SaveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult>}\n */\nMetadata.prototype.rename = function(type, oldFullName, newFullName, callback) {\n  return this._invoke(\"renameMetadata\", { type: type, oldFullName: oldFullName, newFullName: newFullName }).then(function(result) {\n    return convertToSaveResult(result);\n  }).thenCall(callback);\n};\n\n/**\n * Checks the status of asynchronous metadata calls\n *\n * @param {String|Array.<String>} ids - The asynchronous process ID(s)\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.checkStatus = function(ids, callback) {\n  var isArray = _.isArray(ids);\n  var res = this._invoke(\"checkStatus\", { asyncProcessId: ids });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~DescribeMetadataResult\n * @prop {Array.<Object>} metadataObjects - One or more metadata components and their attributes\n * @prop {Array.<String>} metadataObjects.childXmlNames - List of child sub-components for this component\n * @prop {String} metadataObjects.directoryName - The name of the directory in the .zip file that contains this component\n * @prop {Boolean} metadataObjects.inFolder - Indicates whether the component is in a folder or not\n * @prop {Boolean} metadataObjects.metaFile - Indicates whether the component requires an accompanying metadata file\n * @prop {String} metadataObjects.suffix - The file suffix for this component\n * @prop {String} metadataObjects.xmlName - The name of the root element in the metadata file for this component\n * @prop {String} organizationNamespace - The namespace of the organization\n * @prop {Boolean} partialSaveAllowed - Indicates whether rollbackOnError is allowed or not\n * @prop {Boolean} testRequired - Indicates whether tests are required or not\n */\n\n/**\n * Retrieves the metadata which describes your organization, including Apex classes and triggers,\n * custom objects, custom fields on standard objects, tab sets that define an app,\n * and many other components.\n *\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Metadata~DescribeMetadataResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DescribeMetadataResult>}\n */\nMetadata.prototype.describe = function(version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  return this._invoke(\"describeMetadata\", { asOfVersion: version }).then(function(res) {\n    res.metadataObjects = _.isArray(res.metadataObjects) ? res.metadataObjects : [ res.metadataObjects ];\n    res.metadataObjects = _.map(res.metadataObjects, function(mo) {\n      if (mo.childXmlNames) {\n        mo.childXmlNames = _.isArray(mo.childXmlNames) ? mo.childXmlNames: [ mo.childXmlNames ];\n      }\n      mo.inFolder = mo.inFolder === 'true';\n      mo.metaFile = mo.metaFile === 'true';\n      return mo;\n    });\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\n    res.testRequired = res.testRequired === 'true';\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~DescribeValueTypeResult\n * @prop {Boolean} apiCreatable - Indicates whether this value type can be created through the createMetadata() call (true) or not (false)\n * @prop {Boolean} apiDeletable - Indicates whether this value type can be created through the deleteMetadata() call (true) or not (false)\n * @prop {Boolean} apiReadable - Indicates whether this value type can be created through the readMetadata() call (true) or not (false)\n * @prop {Boolean} apiUpdatable - Indicates whether this value type can be created through the updateMetadata() call (true) or not (false)\n * @prop {Object} parentField - Information about the parent of this value type. Parent field information is useful for metadata types that are specified with the parent in their name, such as custom fields, email templates, workflow rules, and reports. For example, the full name of a custom field includes the sObject that contains it (for example, Account.field1__c). Similarly, the full name of an email template includes the folder where the template is stored (for example, MyFolder/EmailTemplate1). If the value type has no parent, this field is null\n * @prop {Array.<Object>} valueTypeFields - One or more metadata components and their attributes\n * @prop {Array.<Object>} valueTypeFields.fields - The ValueTypeField object for the next field, if any\n * @prop {Boolean} valueTypeFields.fields.isForeignKey\n * @prop {Boolean} valueTypeFields.fields.isNameField\n * @prop {Number} valueTypeFields.fields.minOccurs\n * @prop {String} valueTypeFields.fields.name\n * @prop {String} valueTypeFields.fields.soapType\n * @prop {Boolean} valueTypeFields.fields.valueRequired\n * @prop {String} valueTypeFields.foreignKeyDomain - If isForeignKey is True, foreignKeyDomain is the type of object, such as Account or Opportunity\n * @prop {Boolean} valueTypeFields.isForeignKey -  True if the field is a foreign key. That means this field is the primary key in a different database table\n * @prop {Boolean} valueTypeFields.isNameField -  True if this value type field is a fullName field, otherwise False\n * @prop {Number} valueTypeFields.minOccurs - 1 if this field is required, 0 otherwise\n * @prop {String} valueTypeFields.name - The name of this value type field. The name is null for parent fields\n * @prop {Array.<Object>} valueTypeFields.picklistValues - The individual picklist values if the field is a picklist\n * @prop {Boolean} valueTypeFields.picklistValues.active\n * @prop {Boolean} valueTypeFields.picklistValues.defaultValue\n * @prop {String} valueTypeFields.picklistValues.label\n * @prop {String} valueTypeFields.picklistValues.value\n * @prop {String} valueTypeFields.soapType - The data type of the field, such as boolean or double\n * @prop {Boolean} valueTypeFields.valueRequired - Required. Indicates whether this value type field must have a value (true) or can be null (false)\n */\n\n/**\n * Contains information about a value type that is useful for developers working with declarative metadata.\n * The describeValueType() call returns a DescribeValueTypeResult object.\n * Each DescribeValueTypeResult object has the following properties.\n *\n * @param {String} [type] - The name of the metadata type for which you want metadata; for example, ApexClass. Include the namespace.\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Metadata~DescribeValueTypeResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DescribeValueTypeResult>}\n */\nMetadata.prototype.describeValueType = function(type, version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n\n  return this._invoke(\"describeValueType\", { type: type }).then(function(res) {\n\n    function convertValueTypeFieldTypes(valueTypeField) {\n      if(!valueTypeField) {\n        return null;\n      }\n      valueTypeField.fields = valueTypeField.fields || [];\n      valueTypeField.fields = _.isArray(valueTypeField.fields) ? valueTypeField.fields : [ valueTypeField.fields ];\n      valueTypeField.fields = _.map(valueTypeField.fields, convertValueTypeFieldTypes);\n      valueTypeField.isForeignKey = valueTypeField.isForeignKey === 'true';\n      valueTypeField.isNameField = valueTypeField.isNameField === 'true';\n      valueTypeField.valueRequired = valueTypeField.valueRequired === 'true';\n      valueTypeField.minOccurs = Number(valueTypeField.minOccurs);\n      valueTypeField.picklistValues = valueTypeField.picklistValues || [];\n      valueTypeField.picklistValues = _.isArray(valueTypeField.picklistValues) ? valueTypeField.picklistValues : [ valueTypeField.picklistValues ];\n      valueTypeField.picklistValues = _.map(valueTypeField.picklistValues, function(picklistValue) {\n        picklistValue.active = picklistValue.active === 'true';\n        picklistValue.defaultValue = picklistValue.defaultValue === 'true';\n        picklistValue.label = picklistValue.label && picklistValue.label.$ && picklistValue.label.$['xsi:nil'] ? null : picklistValue.label;\n        return picklistValue;\n      })\n      return valueTypeField;\n    }\n\n    res.apiCreatable = res.apiCreatable === 'true';\n    res.apiDeletable = res.apiDeletable === 'true';\n    res.apiReadable = res.apiReadable === 'true';\n    res.apiUpdatable = res.apiUpdatable === 'true';\n    res.apiUpdatable = res.apiUpdatable === 'true';\n    if(_.isObject(res.parentField)) {\n      convertValueTypeFieldTypes(res.parentField);\n    }\n    res.valueTypeFields = res.valueTypeFields || [];\n    res.valueTypeFields = _.isArray(res.valueTypeFields) ? res.valueTypeFields : [ res.valueTypeFields ];\n    res.valueTypeFields = _.map(res.valueTypeFields, convertValueTypeFieldTypes);\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\n    res.testRequired = res.testRequired === 'true';\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~ListMetadataQuery\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} [folder] - The folder associated with the component.\n */\n\n/**\n * @typedef {Object} Metadata~FileProperties\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} createdById - ID of the user who created the file\n * @prop {String} createdByName - Name of the user who created the file\n * @prop {String} createdDate - Date and time when the file was created\n * @prop {String} fileName - Name of the file\n * @prop {String} fullName - The file developer name used as a unique identifier for API access\n * @prop {String} id - ID of the file\n * @prop {String} lastModifiedById - ID of the user who last modified the file\n * @prop {String} lastModifiedByName - Name of the user who last modified the file\n * @prop {String} lastModifiedDate - Date and time that the file was last modified\n * @prop {String} [manageableState] - Indicates the manageable state of the specified component if it is contained in a package\n * @prop {String} [namespacePrefix] - The namespace prefix of the component\n */\n\n/**\n * Retrieves property information about metadata components in your organization\n *\n * @param {Metadata~ListMetadataQuery|Array.<Metadata~ListMetadataQuery>} queries - The criteria object(s) specifing metadata to list\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Array.<Metadata~FileProperties>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~FileProperties>>}\n */\nMetadata.prototype.list = function(queries, version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  if (!_.isArray(queries)) {\n    queries = [ queries ];\n  }\n  return this._invoke(\"listMetadata\", { queries: queries, asOfVersion: version }, callback);\n};\n\n/**\n * @typedef {Object} Metadata~RetrieveRequest\n */\n\n/**\n * Retrieves XML file representations of components in an organization\n *\n * @param {Metadata~RetrieveRequest} request - Options for determining which packages or files are retrieved\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~RetrieveResultLocator}\n */\nMetadata.prototype.retrieve = function(request, callback) {\n  var res = this._invoke(\"retrieve\", { request: request });\n  return new RetrieveResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call retrieve() and returns the zip file contents\n *\n * @param {String} id - Async process id returned from previous retrieve request\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nMetadata.prototype.checkRetrieveStatus = function(id, callback) {\n  return this._invoke(\"checkRetrieveStatus\", { asyncProcessId: id }, callback);\n};\n\n/**\n * Deploy components into an organization using zipped file representations\n *\n * @param {stream.Stream|Buffer|String} zipInput - Zipped file input source in readable stream, binary buffer or Base64-encoded string\n * @param {Object} [options] - Options used in deployment\n * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\n * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\n * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\n * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\n * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\n * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\n * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\n * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\n * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\n * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~DeployResultLocator}\n */\nMetadata.prototype.deploy = function(zipInput, options, callback) {\n  if (!options || _.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var deferred = Promise.defer();\n  if (_.isObject(zipInput) && _.isFunction(zipInput.pipe)) {\n    var bufs = [];\n    zipInput.on('data', function(d) {\n      bufs.push(d);\n    });\n    zipInput.on('end', function() {\n      deferred.resolve(Buffer.concat(bufs).toString('base64'));\n    });\n    // zipInput.resume();\n  } else if (zipInput instanceof Buffer) {\n    deferred.resolve(zipInput.toString('base64'));\n  } else if (zipInput instanceof String || typeof zipInput === 'string') {\n    deferred.resolve(zipInput);\n  } else {\n    throw \"Unexpected zipInput type\";\n  }\n\n  var self = this;\n  var res = deferred.promise.then(function(zipContentB64) {\n    return self._invoke(\"deploy\", {\n      ZipFile: zipContentB64,\n      DeployOptions: options\n    }, callback);\n  });\n  return new DeployResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call deploy()\n *\n * @param {String} id - Async process id returned from previous deploy request\n * @param {Boolean} [includeDetails] - Sets the DeployResult object to include details information (default: false)\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nMetadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {\n  if (_.isObject(includeDetails) || _.isBoolean(includeDetails)) {\n    includeDetails = !!includeDetails;\n  } else {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  return this._invoke(\"checkDeployStatus\", {\n    asyncProcessId: id,\n    includeDetails : includeDetails\n  }).then(function(res) {\n    res.done = res.done === 'true';\n    res.success = res.success === 'true';\n    res.checkOnly = res.checkOnly === 'true';\n    res.runTestsEnabled = res.runTestsEnabled === 'true';\n    if (res.ignoreWarnings) {\n      res.ignoreWarnings = res.ignoreWarnings === 'true';\n    }\n    if (res.rollbackOnError) {\n      res.rollbackOnError = res.rollbackOnError === 'true';\n    }\n    res.numberComponentErrors = Number(res.numberComponentErrors);\n    res.numberComponentsDeployed = Number(res.numberComponentsDeployed);\n    res.numberComponentsTotal = Number(res.numberComponentsTotal);\n    res.numberTestErrors = Number(res.numberTestErrors);\n    res.numberTestsCompleted = Number(res.numberTestsCompleted);\n    res.numberTestsTotal = Number(res.numberTestsTotal);\n\n    if (res.details) {\n      res.details = (Array.isArray(res.details) ? res.details : [res.details]);\n      res.details.forEach(function(detail) {\n        var fails = Array.isArray(detail.componentFailures)\n          ? detail.componentFailures\n          : [detail.componentFailures];\n        var success = Array.isArray(detail.componentSuccesses)\n          ? detail.componentSuccesses\n          : [detail.componentSuccesses];\n\n        fails.concat(success).forEach(\n          function(component) {\n            if (component === undefined) {\n              return\n            }\n            component.changed = component.changed === 'true'\n            component.created = component.created === 'true'\n            component.deleted = component.deleted === 'true'\n            component.success = component.success === 'true'\n            if (component.columnNumber) {\n              component.columnNumber = Number(component.columnNumber)\n            }\n            if (component.lineNumber) {\n              component.lineNumber = Number(component.lineNumber)\n            }\n          }\n        )\n      })\n    }\n    return res;\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n\n/**\n * @typedef {Object} Metadata~AsyncResult\n * @prop {Boolean} done - Indicates whether the call has completed or not\n * @prop {String} id - ID of the component being created, updated, deleted, deployed, or retrieved\n * @prop {String} state - The state four possible values: Queued, InProgress, Completed, and Error.\n * @prop {String} [statusCode] - If an error occurred during the create(), update(), or delete() call, a status code is returned\n * @prop {String} [message] - Message corresponding to the statusCode field returned\n */\n\n/**\n * The locator class for Metadata API asynchronous call result\n *\n * @protected\n * @class Metadata~AsyncResultLocator\n * @extends events.EventEmitter\n * @implements Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} results - Promise object for async result info\n * @param {Boolean} [isArray] - Indicates whether the async request is given in array or single object\n */\nvar AsyncResultLocator = function(meta, results, isArray) {\n  this._meta = meta;\n  this._results = results;\n  this._isArray = isArray;\n};\n\ninherits(AsyncResultLocator, events.EventEmitter);\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for batch result\n *\n * @method Metadata~AsyncResultLocator#then\n */\nAsyncResultLocator.prototype.then = function(onResolve, onReject) {\n  var self = this;\n  return this._results.then(function(results) {\n    var convertType = function(res) {\n      if (res.$ && res.$[\"xsi:nil\"] === 'true') {\n        return null;\n      }\n      res.done = res.done === 'true';\n      return res;\n    };\n    results = _.isArray(results) ? _.map(results, convertType) : convertType(results);\n    if (self._isArray && !_.isArray(results)) {\n      results = [ results ];\n    }\n    return onResolve(results);\n  }, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Metadata~AsyncResultLocator#thenCall\n */\nAsyncResultLocator.prototype.thenCall = function(callback) {\n  return _.isFunction(callback) ? this.then(function(res) {\n    process.nextTick(function() {\n      callback(null, res);\n    });\n  }, function(err) {\n    process.nextTick(function() {\n      callback(err);\n    });\n  }) : this;\n};\n\n/**\n * Check the status of async request\n *\n * @method Metadata~AsyncResultLocator#check\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.check = function(callback) {\n  var self = this;\n  var meta = this._meta;\n  return this.then(function(results) {\n    var ids = _.isArray(results) ? _.map(results, function(res){ return res.id; }) : results.id;\n    self._ids = ids;\n    return meta.checkStatus(ids);\n  }).thenCall(callback);\n};\n\n/**\n * Polling until async call status becomes complete or error\n *\n * @method Metadata~AsyncResultLocator#poll\n * @param {Number} interval - Polling interval in milliseconds\n * @param {Number} timeout - Polling timeout in milliseconds\n */\nAsyncResultLocator.prototype.poll = function(interval, timeout) {\n  var self = this;\n  var startTime = new Date().getTime();\n  var poll = function() {\n    var now = new Date().getTime();\n    if (startTime + timeout < now) {\n      var errMsg = \"Polling time out.\";\n      if (self._ids) {\n        errMsg += \" Process Id = \" + self._ids;\n      }\n      self.emit('error', new Error(errMsg));\n      return;\n    }\n    self.check().then(function(results) {\n      var done = true;\n      var resultArr = _.isArray(results) ? results : [ results ];\n      for (var i=0, len=resultArr.length; i<len; i++) {\n        var result = resultArr[i];\n        if (result && !result.done) {\n          self.emit('progress', result);\n          done = false;\n        }\n      }\n      if (done) {\n        self.emit('complete', results);\n      } else {\n        setTimeout(poll, interval);\n      }\n    }, function(err) {\n      self.emit('error', err);\n    });\n  };\n  setTimeout(poll, interval);\n};\n\n/**\n * Check and wait until the async requests become in completed status\n *\n * @method Metadata~AsyncResultLocator#complete\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.complete = function(callback) {\n  var deferred = Promise.defer();\n  this.on('complete', function(results) {\n    deferred.resolve(results);\n  });\n  this.on('error', function(err) {\n    deferred.reject(err);\n  });\n  var meta = this._meta;\n  this.poll(meta.pollInterval, meta.pollTimeout);\n  return deferred.promise.thenCall(callback);\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track retreive() Metadata API call result\n *\n * @protected\n * @class Metadata~RetrieveResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of retrieve call()\n */\nvar RetrieveResultLocator = function(meta, result) {\n  RetrieveResultLocator.super_.call(this, meta, result);\n};\n\ninherits(RetrieveResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~RetrieveResult\n * @prop {Array.<Metadata~FileProperties>} fileProperties - Contains information about the properties of each component in the .zip file, and the manifest file package.xml\n * @prop {String} id - ID of the component being retrieved\n * @prop {Array.<Object>} messages - Contains information about the success or failure of the retrieve() call\n * @prop {String} zipFile - The zip file returned by the retrieve request. Base 64-encoded binary data\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @memthod Metadata~RetrieveResultLocator#complete\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nRetrieveResultLocator.prototype.complete = function(callback) {\n  var meta = this._meta;\n  return RetrieveResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkRetrieveStatus(result.id);\n  }).thenCall(callback);\n};\n\n/**\n * Change the retrieved result to Node.js readable stream\n *\n * @method Metadata~RetrieveResultLocator#stream\n * @returns {stream.Readable}\n */\nRetrieveResultLocator.prototype.stream = function() {\n  var self = this;\n  var resultStream = new stream.Readable();\n  var reading = false;\n  resultStream._read = function() {\n    if (reading) { return; }\n    reading = true;\n    self.complete(function(err, result) {\n      if (err) {\n        resultStream.emit('error', err);\n      } else {\n        resultStream.push(new Buffer(result.zipFile, 'base64'));\n        resultStream.push(null);\n      }\n    });\n  };\n  return resultStream;\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track deploy() Metadata API call result\n *\n * @protected\n * @class Metadata~DeployResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call\n */\nvar DeployResultLocator = function(meta, result) {\n  DeployResultLocator.super_.call(this, meta, result);\n};\n\ninherits(DeployResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~DeployResult\n * @prop {String} id - ID of the component being deployed\n * @prop {Boolean} checkOnly - Indicates whether this deployment is being used to check the validity of the deployed files without making any changes in the organization or not\n * @prop {String} completedDate - Timestamp for when the deployment process ended\n * @prop {String} createdDate - Timestamp for when the deploy() call was received\n * @prop {Array.<Object>} [details] - Provides the details of a deployment that is in-progress or ended, if includeDetails is set to true in checkDeployStatus() call\n * @prop {Boolean} done - Indicates whether the server finished processing the deploy() call for the specified id\n * @prop {String} [errorMessage] - Message corresponding to the values in the errorStatusCode field\n * @prop {String} [errorStatusCode] - If an error occurred during the deploy() call, a status code is returned, and the message corresponding to the status code is returned in the errorMessagefield\n * @prop {Boolean} [ignoreWarnings] - Specifies whether a deployment should continue even if the deployment generates warnings\n * @prop {String} lastModifiedDate - Timestamp of the last update for the deployment process\n * @prop {Number} numberComponentErrors - The number of components that generated errors during this deployment\n * @prop {Number} numberComponentsDeployed - The number of components deployed in the deployment process\n * @prop {Number} numberComponentsTotal - The total number of components in the deployment\n * @prop {Number} numberTestErrors - The number of Apex tests that have generated errors during this deployment\n * @prop {Number} numberTestsCompleted - The number of completedApex tests for this deployment\n * @prop {Number} numberTestsTotal - The total number of Apex tests for this deployment\n * @prop {Boolean} [rollbackOnError] - Indicates whether any failure causes a complete rollback or not. Default is true.\n * @prop {String} startDate - Timestamp for when the deployment process began\n * @prop {String} status - Indicates the current state of the deployment\n * @prop {Boolean} success - Indicates whether the deployment was successful or not\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @method Metadata~DeployResultLocator#complete\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nDeployResultLocator.prototype.complete = function(includeDetails, callback) {\n  if (_.isFunction(includeDetails)) {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  var meta = this._meta;\n  return DeployResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkDeployStatus(result.id, includeDetails);\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\njsforce.on('connection:new', function(conn) {\n  conn.metadata = new Metadata(conn);\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}